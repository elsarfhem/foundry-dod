{
  "name": "Aggiungi al mazzo",
  "type": "script",
  "author": "r8RTNiMjzdQbTh3C",
  "img": "icons/svg/card-hand.svg",
  "scope": "global",
  "command": "const deck = game.cards.getName(\"DoD - lista carte\");\nconst pile = game.cards.getName(\"Mazzo\");\nconst hand = game.cards.getName(\"Mano\");\n\nconst suitToName = (suit) => {\n  switch (suit) {\n    case \"white\":\n      return \"Carta Bianca\";\n    case \"success\":\n      return \"Carta Successo\";\n    case \"issue\":\n      return \"Carta Imprevisto\";\n    case \"destiny\":\n      return \"Carta del Destino\";\n    case \"failure\":\n      return \"Carta Fallimento\";\n    case \"fortune\":\n      return \"Carta Fortuna\";\n  }\n}\n\nlet confimed = false;\n\nnew Dialog({\n  title: \"Crea il mazzo\",\n  content: `\n     <form>\n\t    <div class=\"form-group\">\n       <label>Num. Carte Successo:</label>\n       <input id=\"success-cards\" name=\"success-cards\" value=\"0\" autofocus onFocus=\"select()\" tabindex=\"1\" type=\"number\" min=\"0\"></input>\n      </div>\n      <div class=\"form-group\">\n       <label>Num. Carte Fallimento:</label>\n       <input id=\"failure-cards\" name=\"failure-cards\" value=\"0\" tabindex=\"2\" type=\"number\" min=\"0\"></input>\n      </div>\n      <div class=\"form-group\">\n       <label>Num. Carte Imprevisto:</label>\n       <input id=\"issue-cards\" name=\"issue-cards\" value=\"0\" tabindex=\"3\" type=\"number\" min=\"0\"></input>\n      </div>\n      <div class=\"form-group\">\n       <label>Num. Carte del Destino:</label>\n       <input id=\"destiny-cards\" name=\"destiny-cards\" value=\"0\" tabindex=\"4\" type=\"number\" min=\"0\"></input>\n      </div>\n      <div class=\"form-group\">\n       <label>Num. Carte Fortuna:</label>\n       <input id=\"fortune-cards\" name=\"fortune-cards\" value=\"0\" tabindex=\"5\" type=\"number\" min=\"0\"></input>\n      </div>\n     </form>\n     `,\n  buttons: {\n    one: {\n      icon: '<i class=\"fas fa-check\"></i>',\n      label: \"Aggiungi al Mazzo\",\n      callback: () => confirmed = true\n    },\n    two: {\n      icon: '<i class=\"fas fa-times\"></i>',\n      label: \"Annulla\",\n      callback: () => confirmed = false\n    }\n  },\n  default: \"one\",\n  close: async (html) => {\n    if (confirmed) {\n      const successCards = deck.cards.filter(card => card.suit == \"success\" && !card.drawn)\n      const issueCards = deck.cards.filter(card => card.suit == \"issue\" && !card.drawn)\n      const destinyCards = deck.cards.filter(card => card.suit == \"destiny\" && !card.drawn)\n      const failureCards = deck.cards.filter(card => card.suit == \"failure\" && !card.drawn)\n      const fortuneCards = deck.cards.filter(card => card.suit == \"fortune\" && !card.drawn)\n\n      const issueCardsNum = parseInt(html.find('[name=issue-cards]')[0].value) || 0\n      const successCardsNum = parseInt(html.find('[name=success-cards]')[0].value) || 0\n      const destinyCardsNum = parseInt(html.find('[name=destiny-cards]')[0].value) || 0\n      const failureCardsNum = parseInt(html.find('[name=failure-cards]')[0].value) || 0\n      const fortuneCardsNum = parseInt(html.find('[name=fortune-cards]')[0].value) || 0\n\n      const successSelected = successCards.slice(0, successCardsNum)\n      const issueSelected = issueCards.slice(0, issueCardsNum)\n      const destinySelected = destinyCards.slice(0, destinyCardsNum)\n      const failureSelected = failureCards.slice(0, failureCardsNum)\n      const fortuneSelected = fortuneCards.slice(0, fortuneCardsNum)\n\n      let cardsHtml = ``\n\n      if (issueCardsNum + successCardsNum + destinyCardsNum + failureCardsNum + fortuneCardsNum > 0) {\n        await\n        deck.pass(pile, successSelected.map(card => card.id)\n          .concat(issueSelected.map(card => card.id))\n          .concat(destinySelected.map(card => card.id))\n          .concat(failureSelected.map(card => card.id))\n          .concat(fortuneSelected.map(card => card.id)), {\n            chatNotification: false\n          })\n\n        ChatMessage.create({\n          user: game.user._id,\n          content: `<p>${game.user.name} ha aggiunto al mazzo: </p>\n        <ul>\n        <li>Carta Successo: ${successCardsNum}</li>\n        <li>Carta Fallimento: ${failureCardsNum}</li>\n\t\t\t\t<li>Carta Imprevisto: ${issueCardsNum}</li>\n\t\t\t\t<li>Carta Fortuna: ${fortuneCardsNum}</li>\n\t\t\t\t<li>Carta del Destino: ${destinyCardsNum}</li>\n        </ul>`\n        })\n      }\n    }\n  }\n}).render(true);",
  "folder": null,
  "ownership": {
    "default": 2,
    "r8RTNiMjzdQbTh3C": 3
  },
  "flags": {
    "advanced-macros": {
      "runAsGM": false,
      "runForSpecificUser": ""
    },
    "exportSource": {
      "world": "blood-rain",
      "system": "wfrp4e",
      "coreVersion": "11.315",
      "systemVersion": "7.0.3"
    }
  },
  "_stats": {
    "compendiumSource": null,
    "duplicateSource": null,
    "coreVersion": "12.328",
    "systemId": "wfrp4e",
    "systemVersion": "7.2.4",
    "createdTime": 1719951073526,
    "modifiedTime": 1719951078250,
    "lastModifiedBy": "r8RTNiMjzdQbTh3C"
  },
  "_id": "EM8S1MN56gGXha5h",
  "sort": 400000,
  "_key": "!macros!EM8S1MN56gGXha5h"
}
